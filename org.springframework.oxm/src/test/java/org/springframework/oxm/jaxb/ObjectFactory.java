/*
 * Copyright 2002-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.01.08 at 12:41:36 PM CET 
//

package org.springframework.oxm.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * org.springframework.oxm.jaxb package. <p>An ObjectFactory allows you to programatically construct new instances of
 * the Java representation for XML content. The Java representation of XML content can consist of schema derived
 * interfaces and classes representing the binding of schema type definitions, element declarations and model groups.
 * Factory methods for each of these are provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName _Flight_QNAME = new QName("http://samples.springframework.org/flight", "flight");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
	 * org.springframework.oxm.jaxb
	 */
	public ObjectFactory() {
	}

	/** Create an instance of {@link FlightType } */
	public FlightType createFlightType() {
		return new FlightType();
	}

	/** Create an instance of {@link Flights } */
	public Flights createFlights() {
		return new Flights();
	}

	/** Create an instance of {@link JAXBElement }{@code <}{@link FlightType }{@code >}} */
	@XmlElementDecl(namespace = "http://samples.springframework.org/flight", name = "flight")
	public JAXBElement<FlightType> createFlight(FlightType value) {
		return new JAXBElement<FlightType>(_Flight_QNAME, FlightType.class, null, value);
	}

}
